{"ast":null,"code":"var _jsxFileName = \"/home/mateus/Documents/GOSTACK/REACT/modulo05/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport { FaGithubAlt, FaPlusCircle, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport { Form, SubmitButton, List } from './styles';\nimport Container from '../../components/Container';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false,\n      error: false\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newRepo: e.target.value\n      });\n    };\n\n    this.hadleSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true,\n        error: false\n      });\n\n      try {\n        const _this$state = this.state,\n              newRepo = _this$state.newRepo,\n              repositories = _this$state.repositories;\n        const response = await api.get(`repos/${newRepo}`);\n        const data = {\n          name: response.data.full_name\n        };\n        this.setState({\n          repositories: [...repositories, data],\n          newRepo: '',\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        this.setState({\n          error: true\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  // Carregar os dados do localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({\n        repositories: JSON.parse(repositories)\n      });\n    }\n  } // Salvar os dados do localStorage\n\n\n  componentDidUpdate(_, prevState) {\n    const repositories = this.state.repositories;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          newRepo = _this$state2.newRepo,\n          loading = _this$state2.loading,\n          repositories = _this$state2.repositories,\n          error = _this$state2.error;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(FaGithubAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \"Reposit\\xF3rios\"), React.createElement(Form, {\n      onSubmit: this.hadleSubmit,\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Adicionar Reposit\\xF3rio\",\n      value: newRepo,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, loading ? React.createElement(FaSpinner, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : React.createElement(FaPlusCircle, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, repositories.map(repository => React.createElement(\"li\", {\n      key: repository.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, repository.name), React.createElement(Link, {\n      to: `/repository/${encodeURIComponent(repository.name)}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Detalhes\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/mateus/Documents/GOSTACK/REACT/modulo05/src/pages/Main/index.js"],"names":["React","Component","FaGithubAlt","FaPlusCircle","FaSpinner","Link","api","Form","SubmitButton","List","Container","Main","state","newRepo","repositories","loading","error","handleInputChange","e","setState","target","value","hadleSubmit","preventDefault","response","get","data","name","full_name","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","render","map","repository","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlusCircle, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport { Form, SubmitButton, List } from './styles';\nimport Container from '../../components/Container';\n\nexport default class Main extends Component {\n  state = {\n    newRepo: '',\n    repositories: [],\n    loading: false,\n    error: false,\n  };\n\n  // Carregar os dados do localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({ repositories: JSON.parse(repositories) });\n    }\n  }\n\n  // Salvar os dados do localStorage\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({ newRepo: e.target.value });\n  };\n\n  hadleSubmit = async e => {\n    e.preventDefault();\n    this.setState({ loading: true, error: false });\n\n    try {\n      const { newRepo, repositories } = this.state;\n\n      const response = await api.get(`repos/${newRepo}`);\n\n      const data = {\n        name: response.data.full_name,\n      };\n\n      this.setState({\n        repositories: [...repositories, data],\n        newRepo: '',\n        loading: false,\n        error: null,\n      });\n    } catch (error) {\n      this.setState({ error: true });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { newRepo, loading, repositories, error } = this.state;\n\n    return (\n      <Container>\n        <h1>\n          <FaGithubAlt />\n          Reposit√≥rios\n        </h1>\n\n        <Form onSubmit={this.hadleSubmit} error={error}>\n          <input\n            type=\"text\"\n            placeholder=\"Adicionar Reposit√≥rio\"\n            value={newRepo}\n            onChange={this.handleInputChange}\n          />\n\n          <SubmitButton loading={loading}>\n            {loading ? (\n              <FaSpinner color=\"#FFF\" size={14} />\n            ) : (\n              <FaPlusCircle color=\"#FFF\" size={14} />\n            )}\n          </SubmitButton>\n        </Form>\n\n        <List>\n          {repositories.map(repository => (\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\n                Detalhes\n              </Link>\n            </li>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}